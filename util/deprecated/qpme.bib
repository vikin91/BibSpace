% 
% This file was created by the Typo3 extension
% sevenpack version 0.7.16
% 
% --- Timezone: CEST
% Creation date: 2014-04-24
% Creation time: 11-55-18
% --- Number of references
% 42
% 

@Incollection { Osman2013,
   title = {Performance Modelling of Concurrency Control Schemes for Relational Databases},
   year = {2013},
   volume = {7984},
   pages = {337-351},
   pdf = {http://dx.doi.org/10.1007/978-3-642-39408-9_24},
   editor = {Dudin, Alexander and Turck, Koen},
   publisher = {Springer Berlin Heidelberg},
   series = {Lecture Notes in Computer Science},
   booktitle = {Analytical and Stochastic Modeling Techniques and Applications},
   ISBN = {978-3-642-39407-2},
   DOI = {10.1007/978-3-642-39408-9_24},
   author = {Osman, Rasha and Coulden, David and Knottenbelt, WilliamJ.},
   tags = {QPME}
}

@Inproceedings { Coulden:2013:PMD:2479871.2479919,
   title = {Performance modelling of database contention using queueing petri nets},
   year = {2013},
   pages = {331--334},
   keywords = {database locking, performance modelling, queueing petri nets},
   pdf = {http://doi.acm.org/10.1145/2479871.2479919},
   publisher = {ACM},
   address = {New York, NY, USA},
   series = {ICPE '13},
   booktitle = {Proceedings of the ACM/SPEC International conference on performance engineering},
   ISBN = {978-1-4503-1636-1},
   DOI = {10.1145/2479871.2479919},
   author = {Coulden, David and Osman, Rasha and Knottenbelt, William J.},
   tags = {QPME}
}

@Phdthesis { 2012-Babka-PhD,
   title = {Improving Accuracy of Software Performance Models on Multicore Platforms with Shared Caches},
   year = {2012},
   month = {9},
   school = {Charles University in Prague, Czech Republic},
   author = {Babka, Vlastimil},
   tags = {QPME}
}

@Inproceedings { SpKoMe2012-petrinets-QPME,
   title = {Stochastic Modeling and Analysis using QPME: Queueing Petri Net Modeling Environment v2.0},
   year = {2012},
   month = {6},
   volume = {7347},
   pages = {388--397},
   abstract = {Queueing Petri nets are a powerful formalism that can be exploited for modeling distributed systems and analyzing their performance and scalability. By combining the modeling power and expressiveness of queueing networks and stochastic Petri nets, queueing Petri nets provide a number of advantages. In this paper, we present our tool QPME (Queueing Petri net Modeling Environment) for modeling and analysis using queueing Petri nets. QPME provides an Eclipse-based editor for building queueing Petri net models and a powerful simulation engine for analyzing these models. The development of the tool started in 2003 and since then the tool has been distributed to more than 120 organizations worldwide.},
   pdf = {http://sdqweb.ipd.kit.edu/publications/pdfs/SpKoMe2012-petrinets-QPME.pdf},
   editor = {Haddad, Serge and Pomello, Lucia},
   publisher = {Springer-Verlag},
   series = {Lecture Notes in Computer Science (LNCS)},
   booktitle = {Proceedings of the 33rd International Conference on Application and Theory of Petri Nets and Concurrency (Petri Nets 2012)},
   ISBN = {978-3-642-31130-7},
   DOI = {10.1007/978-3-642-31131-4_21},
   author = {Spinner, Simon and Kounev, Samuel and Meier, Philipp},
   tags = {QPME}
}

@Inproceedings { KoSpMe2012-icpe-QPME_Tutorial,
   title = {Introduction to Queueing Petri Nets: Modeling Formalism, Tool Support and Case Studies (Tutorial Paper)},
   year = {2012},
   month = {4},
   pages = {9--18},
   abstract = {Queueing Petri nets are a powerful formalism that can be exploited for modeling distributed systems and evaluating their performance and scalability. By combining the modeling power and expressiveness of queueing networks and stochastic Petri nets, queueing Petri nets provide a number of advantages. This tutorial presents an introduction to queueing Petri nets first introducing the modeling formalism itself and then summarizing the results of several modeling case studies which demonstrate how queueing Petri nets can be used for performance modeling and analysis. As part of the tutorial, we present QPME (Queueing Petri net Modeling Environment), an open-source tool for stochastic modeling and analysis of systems using queueing Petri nets. Finally, we briefly present a model-to-model transformation automatically generating a queueing Petri net model from a higher-level software architecture model annotated with performance relevant information.},
   pdf = {http://sdqweb.ipd.kit.edu/publications/pdfs/KoSpMe2012-icpe-QPME_Tutorial.pdf},
   publisher = {ACM},
   address = {New York, NY, USA},
   booktitle = {Proceedings of the 3rd ACM/SPEC International Conference on Performance Engineering (ICPE 2012), Boston, USA, 22-25 April 2012},
   ISBN = {978-1-4503-1202-8},
   DOI = {10.1145/2188286.2188290},
   author = {Kounev, Samuel and Spinner, Simon and Meier, Philipp},
   tags = {QPME}
}

@Article { SaKoBu2011-SoSyM-PerfModMoEdSys,
   title = {Performance modeling and analysis of message-oriented event-driven systems},
   journal = {Software and Systems Modeling},
   year = {2012},
   month = {2},
   pages = {1--25},
   abstract = {Message-oriented event-driven systems are becoming increasingly ubiquitous in many industry domains including telecommunications, transportation and supply chain management. Applications in these areas typically have stringent requirements for performance and scalability. To guarantee adequate quality-of-service, systems must be subjected to a rigorous performance and scalability analysis before they are put into production. In this paper, we present a comprehensive modeling methodology for message-oriented event-driven systems in the context of a case study of a representative application in the supply chain management domain. The methodology, which is based on queueing Petri nets, provides a basis for performance analysis and capacity planning. We study a deployment of the SPECjms2007 standard benchmark on a leading commercial middleware platform. A detailed system model is built in a step-by-step fashion and then used to predict the system performance under various workload and configuration scenarios. After the case study, we present a set of generic performance modeling patterns that can be used as building blocks when modeling message-oriented event-driven systems. The results demonstrate the effectiveness, practicality and accuracy of the proposed modeling and prediction approach.},
   pdf = {http://sdqweb.ipd.kit.edu/publications/pdfs/SaKoBu2011-SoSyM-PerfModMoEdSys.pdf},
   ISSN = {1619-1366},
   DOI = {10.1007/s10270-012-0228-1},
   author = {Sachs, Kai and Kounev, Samuel and Buchmann, Alejandro},
   tags = {QPME}
}

@Mastersthesis { Spinner2011a,
   title = {Evaluating Approaches to Resource Demand estimation},
   year = {2011},
   month = {7},
   abstract = {Proactively managing the performance and resource efficiency of running software systems requires techniques to predict system performance and resource consumption. Typically, performance predictions are based on performance models that capture the performance-relevant aspects of the considered software system. Building performance models involves the estimation of resource demands, i.e., estimating the time a unit of work spends obtaining service from a resource.

A number of approaches to estimating the resource demands of a system already exist, e.g., based on regression analysis or stochastic filtering. These approaches differ in their accuracy, their robustness and their applicability. For instance, there are notable differences in the amount and type of measurement data that is required as input. However, to the best of our knowledge, a comprehensive evaluation and comparison of these approaches in a representative context does not exist.

In this thesis, we give an overview of the state-of-the-art in resource demand estimation and develop a classification scheme for approaches to resource demand estimation. We implement a sub-set of these estimation approaches and evaluate them in a representative environment. We analyze the influence of various factors of the environment on the estimation accuracy, considering the impact of current technologies, such as multi-core processors and virtualization.

Our work improves the comparability of existing estimation approaches and facilitates the selection of an approach in a given application scenario. Additionally, it shows possible directions for future research in the field of resource demand estimation.},
   pdf = {http://sdqweb.ipd.kit.edu/publications/pdfs/Spinner2011a.pdf},
   address = {Am Fasanengarten 5, 76131 Karlsruhe, Germany},
   school = {Karlsruhe Institute of Technology (KIT)},
   author = {Spinner, Simon},
   tags = {QPME}
}

@Manual { KoSp2011-QPME20-UserGuide,
   title = {QPME 2.0 User's Guide},
   year = {2011},
   month = {5},
   pdf = {http://descartes.ipd.kit.edu/fileadmin/user_upload/descartes/QPME/QPME-UsersGuide.pdf},
   address = {Am Fasanengarten 5, 76131 Karlsruhe, Germany},
   organization = {Karlsruhe Institute of Technology},
   author = {Kounev, Samuel and Spinner, Simon},
   tags = {QPME}
}

@Inproceedings { KoBeBrHuOk2011-SIMUTools-DataFabrics,
   title = {Automated Simulation-Based Capacity Planning for Enterprise Data Fabrics},
   year = {2011},
   month = {3},
   pdf = {http://sdqweb.ipd.kit.edu/publications/descartes-pdfs/KoBeBrHuOk2011-ICST-DataFabrics.pdf},
   booktitle = {4th International ICST Conference on Simulation Tools and Techniques, March 21--25, 2011, Barcelona, Spain},
   author = {Kounev, Samuel and Bender, Konstantin and Brosig, Fabian and Huber, Nikolaus and Okamoto, Russell},
   tags = {QPME}
}

@Techreport { 2011_QImpress_Deliverable,
   title = {Resource Impact Analysis},
   year = {2011},
   month = {1},
   pdf = {http://www.q-impress.eu/wordpress/wp-content/uploads/2010/11/D3.4-Resource_impact_analysis.pdf},
   institution = {Q-ImPrESS Project Deliverable D3.4},
   author = {Babka, Vlastimil and Bulej, Lubomir and Libic, Peter and Marek, Lukas and Martinec, Tomas and Podzimek, Andrej and Tuma, Petr},
   tags = {QPME}
}

@Inproceedings { Babka:2011:LAI:2186355.2186377,
   title = {Can linear approximation improve performance prediction ?},
   year = {2011},
   pages = {250--264},
   abstract = {Software performance evaluation relies on the ability of simple models to predict the performance of complex systems. Often, however, the models are not capturing potentially relevant effects in system behavior, such as sharing of memory caches or sharing of cores by hardware threads. The goal of this paper is to investigate whether and to what degree a simple linear adjustment of service demands in software performance models captures these effects and thus improves accuracy. Outlined experiments explore the limits of the approach on two hardware platforms that include shared caches and hardware threads, with results indicating that the approach can improve throughput prediction accuracy significantly, but can also lead to loss of accuracy when the performance models are otherwise defective.},
   publisher = {Springer-Verlag},
   address = {Berlin, Heidelberg},
   booktitle = {Proceedings of the 8th European conference on Computer Performance Engineering},
   ISBN = {978-3-642-24748-4},
   DOI = {10.1007/978-3-642-24749-1_19},
   author = {Babka, Vlastimil and Tuma, Petr},
   tags = {QPME}
}

@Inproceedings { MeKoKo2011-MASCOTS-PCMtoQPN,
   title = {Automated Transformation of Component-based Software Architecture Models to Queueing Petri Nets},
   year = {2011},
   pdf = {http://sdqweb.ipd.kit.edu/publications/descartes-pdfs/MeKoKo2011-MASCOTS-PCMtoQPN.pdf},
   booktitle = {19th IEEE/ACM International Symposium on Modeling, Analysis and Simulation of Computer and Telecommunication Systems (MASCOTS 2013), Singapore, July 25--27},
   author = {Meier, Philipp and Kounev, Samuel and Koziolek, Heiko},
   tags = {QPME}
}

@Incollection { KoSpMe2010-Festschrift-QPME2,
   title = {QPME 2.0 - A Tool for Stochastic Modeling and Analysis Using Queueing Petri Nets},
   year = {2010},
   volume = {6462},
   pages = {293--311},
   editor = {Sachs, Kai and Petrov, Ilia and Guerrero, Pablo},
   publisher = {Springer-Verlag},
   address = {Berlin, Heidelberg},
   series = {Lecture Notes in Computer Science},
   booktitle = {From Active Data Management to Event-Based Systems and More},
   ISBN = {978-3-642-17225-0},
   DOI = {10.1007/978-3-642-17226-7_18},
   author = {Kounev, Samuel and Spinner, Simon and Meier, Philipp},
   tags = {QPME}
}

@Inproceedings { Babka:2010:VMP:2163764.2163769,
   title = {Validating model-driven performance predictions on random software systems},
   year = {2010},
   pages = {3--19},
   publisher = {Springer-Verlag},
   address = {Berlin, Heidelberg},
   booktitle = {Proceedings of the 6th international conference on Quality of Software Architectures: research into Practice - Reality and Gaps},
   ISBN = {978-3-642-13820-1},
   DOI = {10.1007/978-3-642-13821-8_3},
   author = {Babka, Vlastimil and Tuma, Petr and Bulej, Lubomir},
   tags = {QPME}
}

@Phdthesis { KaiSachs-Thesis-2010,
   title = {Performance Modeling and Benchmarking of Event-Based Systems},
   year = {2010},
   address = {Karolinenplatz 5, 64289 Darmstadt, Germany},
   school = {TU Darmstadt},
   author = {Sachs, Kai},
   tags = {QPME}
}

@Article { KoSa2009-DEBSPerformance,
   title = {Benchmarking and Performance Modeling of Event-Based Systems},
   journal = {it - Information Technology},
   year = {2009},
   month = {10},
   volume = {51},
   number = {5},
   pages = {262--269},
   abstract = {Event-based systems are used increasingly often to build loosely-coupled distributed applications. With their growing popularity and gradual adoption in mission critical areas, the need for novel techniques for benchmarking and performance modeling of event-based systems is increasing. In this article, we provide an overview of the state-of-the-art in this area considering both centralized systems based on message-oriented middleware as well as large-scale distributed publish/subscribe systems. We consider a number of specific techniques for benchmarking and performance modeling, discuss their advantages and disadvantages, and provide references for further information. The techniques we review help to ensure that systems are designed and sized to meet their quality-of-service requirements.},
   pdf = {http://www.dvs.tu-darmstadt.de/publications/pdf/itit.2009.0550.pdf},
   publisher = {Oldenbourg Wissenschaftsverlag},
   address = {Munich, Germany},
   DOI = {10.1524/itit.2009.0550},
   author = {Kounev, Samuel and Sachs, Kai},
   tags = {QPME}
}

@Article { KoDu2009-SIGMETRICS_PER-QPME,
   title = {QPME - A Performance Modeling Tool Based on Queueing Petri Nets},
   journal = {ACM SIGMETRICS Performance Evaluation Review (PER), Special Issue on Tools for Computer Performance Modeling and Reliability Analysis},
   year = {2009},
   month = {3},
   volume = {36},
   pages = {46--51},
   abstract = {Queueing Petri nets are a powerful formalism that can be exploited for modeling distributed systems and analyzing their performance and scalability. By combining the modeling power and expressiveness of queueing networks and stochastic Petri nets, queueing Petri nets provide a number of advantages. In this paper, we present QPME (Queueing Petri net Modeling Environment) - a tool that supports the modeling and analysis of systems using queueing Petri nets. QPME provides an Eclipse-based editor for designing queueing Petri net models and a powerful simulation engine for analyzing the models. After presenting the tool, we discuss the ongoing work on the QPME project and the planned future enhancements of the tool.},
   pdf = {http://sdqweb.ipd.kit.edu/publications/descartes-pdfs/KoDu2009-SIGMETRICS_PER-QPME.pdf},
   publisher = {ACM},
   author = {Kounev, Samuel and Dutz, Christofer},
   tags = {QPME}
}

@Article { NoKoJuTo2008-JSS-GridAutoQoS,
   title = {Autonomic QoS control in enterprise Grid environments using online simulation},
   journal = {Journal of Systems and Software},
   year = {2009},
   month = {3},
   volume = {82},
   number = {3},
   pages = {486--502},
   abstract = {As Grid Computing increasingly enters the commercial domain, performance and Quality of Service (QoS) issues are becoming a major concern. The inherent complexity, heterogeneity and dynamics of Grid computing environments pose some challenges in managing their capacity to ensure that QoS requirements are continuously met. In this paper, a comprehensive framework for autonomic QoS control in enterprise Grid environments using online simulation is proposed. The paper presents a novel methodology for designing autonomic QoS-aware resource managers that have the capability to predict the performance of the Grid components they manage and allocate resources in such a way that service level agreements are honored. Support for advanced features such as autonomic workload characterization on-the-fly, dynamic deployment of Grid servers on demand, as well as dynamic system reconfiguration after a server failure is provided. The goal is to make the Grid middleware self-configurable and adaptable to changes in the system environment and workload. The approach is subjected to an extensive experimental evaluation in the context of a real-world Grid environment and its effectiveness, practicality and performance are demonstrated.},
   pdf = {http://sdqweb.ipd.kit.edu/publications/descartes-pdfs/NoKoJuTo2008-JSS-GridAutoQoS.pdf},
   publisher = {Elsevier Science Publishers B. V.},
   address = {Amsterdam, The Netherlands},
   DOI = {10.1016/j.jss.2008.07.048},
   author = {Nou, Ramon and Kounev, Samuel and Julia, Ferran and Torres, Jordi},
   tags = {QPME}
}

@Inproceedings { SeLa2008,
   title = {An Operational Activity Analysis Using Analytic Hierarchy Process and Queuing Petri Net},
   year = {2008},
   month = {6},
   pages = {107--121},
   editor = {Joseph Barjis and Murali Mohan Narasipuram and Peter Rittgen and Ela Hunt and Xavier Franch and Remi Coletta},
   booktitle = {Proceedings of the 4th International Workshop on Enterprise \& Organizational Modeling and Simulation held in conjunction with the CAiSE'08 Conference, Montpellier, France, June 16-17},
   author = {Ait Seddik, Arezki and Lallement, Patrick},
   tags = {QPME}
}

@Inproceedings { KoSaBaBu2008-ISORC-ModelingDEBS,
   title = {A Methodology for Performance Modeling of Distributed Event-Based Systems},
   year = {2008},
   pages = {13--22},
   abstract = {Distributed event-based systems (DEBS) are gaining increasing attention in new application areas such as transport information monitoring, event-driven supply-chain management and ubiquitous sensor-rich environments. However, as DEBS increasingly enter the enterprise and commercial domains, performance and quality of service issues are becoming a major concern. While numerous approaches to performance modeling and evaluation of conventional request/reply-based distributed systems are available in the literature, no general approach exists for DEBS. This paper is the first to provide a comprehensive methodology for workload characterization and performance modeling of DEBS. A workload model of a generic DEBS is developed and operational analysis techniques are used to characterize the system traffic and derive an approximation for the mean event delivery latency. Following this, a modeling technique is presented that can be used for accurate performance prediction. The paper is concluded with a case study of a real life system demonstrating the effectiveness and practicality of the proposed approach.},
   note = {Nominated for Best-Paper-Award at ISORC-2008.},
   pdf = {http://ise.gmu.edu/isorc08/},
   publisher = {IEEE Computer Society},
   address = {Washington, DC, USA},
   booktitle = {Proceedings of the 11th International Symposium on Object Oriented Real-Time Distributed Computing (ISORC 2008), Orlando, Florida, USA, May 5-7, 2008},
   ISBN = {978-0-7695-3132-8},
   DOI = {10.1109/ISORC.2008.51},
   author = {Kounev, Samuel and Sachs, Kai and Bacon, Jean and Buchmann, Alejandro},
   tags = {QPME}
}

@Inproceedings { NoKoTo2007-EPEW-GridOnlinePerfModels,
   title = {Building Online Performance Models of Grid Middleware with Fine-Grained Load-Balancing: A Globus Toolkit Case Study},
   year = {2007},
   month = {9},
   number = {4748},
   pages = {125--140},
   abstract = {As Grid computing increasingly enters the commercial domain, performance and Quality of Service (QoS) issues are becoming a major concern. To guarantee that QoS requirements are continuously satisfied, the Grid middleware must be capable of predicting the application performance on the fly when deciding how to distribute the workload among the available resources. One way to achieve this is by using online performance models that get generated and analyzed on the fly. In this paper, we present a novel case study with the Globus Toolkit in which we show how performance models can be generated dynamically and used to provide online performance prediction capabilities. We have augmented the Grid middleware with an online performance prediction component that can be called at any time during operation to predict the Grid performance for a given resource allocation and load-balancing strategy. We evaluate the quality of our performance prediction mechanism and present some experimental results that demonstrate its effectiveness and practicality. The framework we propose can be used to design intelligent QoS-aware resource allocation and admission control mechanisms.},
   pdf = {http://www.springer.com/computer/programming/book/978-3-540-75210-3},
   editor = {Katinka Wolter},
   publisher = {Springer},
   address = {Heidelberg, Germany},
   series = {Lecture Notes in Computer Science},
   booktitle = {Formal Methods and Stochastic Models for Performance Evaluation, Proceedings of the 4th European Performance Engineering Workshop (EPEW 2007), Berlin, Germany, September 27-28, 2007},
   ISBN = {978-3-540-75210-3},
   DOI = {10.1007/978-3-540-75211-0_10},
   author = {Nou, Ramon and Kounev, Samuel and Torres, Jordi},
   tags = {QPME}
}

@Mastersthesis { He2007-TUD-LQNvsQPN,
   title = {Performance Modelling of Java EE Applications using LQNs and QPNs},
   year = {2007},
   month = {9},
   school = {Technische Universit{\"a}t Darmstadt, Darmstadt, Germany},
   author = {Heimburger, Frank},
   tags = {QPME}
}

@Techreport { NoKo2007-UPC-GlobusOnlinePerfModels,
   title = {Preliminary Analysis of Globus Toolkit 4 to Create Prediction Models},
   year = {2007},
   month = {7},
   number = {UPC-DAC-RR-2007-37},
   institution = {Computer Architecture Department, Technical University of Catalonia (UPC), Spain},
   author = {Nou, Ramon and Kounev, Samuel},
   tags = {QPME}
}

@Techreport { KoNoTo2007-UPC-GridAutoQoS,
   title = {Using QPN models for QoS Control in Grid Middleware},
   year = {2007},
   month = {4},
   number = {UPC-DAC-RR-CAP-2007-4},
   institution = {Computer Architecture Department, Technical University of Catalonia (UPC), Spain},
   author = {Kounev, Samuel and Nou, Ramon and Torres, Jordi},
   tags = {QPME}
}

@Inbook { KoBu2007-ARS-OnTheUseOfQPNs,
   title = {Petri Net, Theory and Application},
   year = {2007},
   month = {2},
   abstract = {Predictive performance models are used increasingly throughout the phases of the software engineering lifecycle of distributed systems. However, as systems grow in size and complexity, building models that accurately capture the different aspects of their behavior becomes a more and more challenging task. The challenge stems from the limited model expressiveness on the one hand and the limited scalability of model analysis techniques on the other. This chapter presents a novel methodology for modeling and performance analysis of distributed systems. The methodology is based on queueing Petri nets (QPNs) which provide greater modeling power and expressiveness than conventional modeling paradigms such as queueing networks and generalized stochastic Petri nets. Using QPNs, one can integrate both hardware and software aspects of system behavior into the same model. In addition to hardware contention and scheduling strategies, QPNs make it easy to model software contention, simultaneous resource possession, synchronization, blocking and asynchronous processing. These aspects have significant impact on the performance of modern distributed systems. To avoid the problem of state space explosion, our methodology uses discrete event simulation for model analysis. We propose an efficient and reliable method for simulation of QPNs. As a validation of our approach, we present a case study of a real-world distributed system, showing how our methodology is applied in a step-by-step fashion to evaluate the system performance and scalability. The system studied is a deployment of the industry-standard SPECjAppServer2004 benchmark. A detailed model of the system and its workload is built and used to predict the system performance for several deployment configurations and workload scenarios of interest. Taking advantage of the expressive power of QPNs, our approach makes it possible to model systems at a higher degree of accuracy providing a number of important benefits.},
   pdf = {http://s.i-techonline.com/Book/Petri-Net/ISBN978-3-902613-12-7.html},
   editor = {Vedran Kordic},
   publisher = {Advanced Robotic Systems International, I-Tech Education and Publishing},
   address = {Vienna, Austria},
   chapter = {On the Use of Queueing Petri Nets for Modeling and Performance Analysis of Distributed Systems},
   ISBN = {978-3-902613-12-7},
   author = {Kounev, Samuel and Buchmann, Alejandro},
   tags = {QPME}
}

@Inproceedings { KoNoTo2007-VALUETOOLS-GridAuton_QoS_Control,
   title = {Autonomic QoS-Aware Resource Management in Grid Computing using Online Performance Models},
   year = {2007},
   pages = {1--10},
   abstract = {As Grid Computing increasingly enters the commercial domain, performance and Quality of Service (QoS) issues are becoming a major concern. The inherent complexity, heterogeneity and dynamics of Grid computing environments pose some challenges in managing their capacity to ensure that QoS requirements are continuously met. In this paper, an approach to autonomic QoS-aware resource management in Grid computing based on online performance models is proposed. The paper presents a novel methodology for designing autonomic QoS-aware resource managers that have the capability to predict the performance of the Grid components they manage and allocate resources in such a way that service level agreements are honored. The goal is to make the Grid middleware self-configurable and adaptable to changes in the system environment and workload. The approach is subjected to an extensive experimental evaluation in the context of a real-world Grid environment and its effectiveness, practicality and performance are demonstrated.},
   pdf = {http://www.valuetools.org/2007/},
   publisher = {ICST (Institute for Computer Sciences, Social-Informatics and Telecommunications Engineering)},
   address = {ICST, Brussels, Belgium, Belgium},
   booktitle = {Proceedings of the Second International Conference on Performance Evaluation Methodologies and Tools (VALUETOOLS 2007), Nantes, France, October 23-25, 2007},
   ISBN = {978-963-9799-00-4},
   DOI = {10.1145/1345263.1345325},
   author = {Kounev, Samuel and Nou, Ramon and Torres, Jordi},
   tags = {QPME}
}

@Inproceedings { KoDuBu2006-QEST-QPME,
   title = {QPME - Queueing Petri Net Modeling Environment},
   year = {2006},
   month = {9},
   pages = {115--116},
   abstract = {Queueing Petri nets are a powerful formalism that can be exploited for modeling distributed systems and analyzing their performance and scalability. However, currently available tools for modeling and analysis using queueing Petri nets are very limited in terms of the scalability of the analysis algorithms they provide. Moreover, tools are available only on highly specialized platforms unaccessible to most potential users. In this paper, we present QPME - a Queueing Petri Net Modeling Environment that supports the modeling and analysis of systems using queueing Petri nets. QPME runs on a wide range of platforms and provides a powerful simulation engine that can be used to analyze models of realistically-sized systems.},
   pdf = {http://www.qest.org/qest2006/},
   publisher = {IEEE Computer Society},
   address = {Washington, DC, USA},
   booktitle = {Proceedings of the 3rd International Conference on Quantitative Evaluation of SysTems (QEST 2006), Riverside, California, USA, September 11-14, 2006},
   ISBN = {0-7695-2665-9},
   DOI = {10.1109/QEST.2006.44},
   author = {Kounev, Samuel and Dutz, Christofer and Buchmann, Alejandro},
   tags = {QPME}
}

@Article { Ko2006-IEEE_TSE-QPN_ModelingMethod,
   title = {Performance Modeling and Evaluation of Distributed Component-Based Systems using Queueing Petri Nets},
   journal = {IEEE Transactions on Software Engineering},
   year = {2006},
   month = {7},
   volume = {32},
   number = {7},
   pages = {486--502},
   abstract = {Performance models are used increasingly throughout the phases of the software engineering lifecycle of distributed component-based systems. However, as systems grow in size and complexity, building models that accurately capture the different aspects of their behavior becomes a more and more challenging task. In this paper, we present a novel case study of a realistic distributed component-based system, showing how Queueing Petri Net models can be exploited as a powerful performance prediction tool in the software engineering process. A detailed system model is built in a step-by-step fashion, validated, and then used to evaluate the system performance and scalability. Along with the case study, a practical performance modeling methodology is presented which helps to construct models that accurately reflect the system performance and scalability characteristics. Taking advantage of the modeling power and expressiveness of Queueing Petri Nets, our approach makes it possible to model the system at a higher degree of accuracy, providing a number of important benefits.},
   pdf = {http://www.computer.org/tse/},
   DOI = {10.1109/TSE.2006.69},
   author = {Kounev, Samuel},
   tags = {QPME}
}

@Article { KoBu2006-PERFEVAL-SimQPN,
   title = {SimQPN - a tool and methodology for analyzing queueing Petri net models by means of simulation},
   journal = {Performance Evaluation},
   year = {2006},
   month = {5},
   volume = {63},
   number = {4-5},
   pages = {364--394},
   pdf = {http://www.elsevier.com/wps/find/journaldescription.cws_home/505618/description},
   publisher = {Elsevier Science Publishers B. V.},
   address = {Amsterdam, The Netherlands},
   ISSN = {0166-5316},
   DOI = {10.1016/j.peva.2005.03.004},
   author = {Kounev, Samuel and Buchmann, Alejandro},
   tags = {QPME}
}

@Mastersthesis { Du2006-TUD-QPE,
   title = {QPE - A Graphical Editor for Modeling using Queueing Petri Nets},
   year = {2006},
   month = {3},
   school = {Technische Universit{\"a}t Darmstadt},
   author = {Dutz, Christofer},
   tags = {QPME}
}

@Inproceedings { Ko2006-SPEC_BW-J2EEPerfScal,
   title = {J2EE Performance and Scalability - From Measuring to Predicting},
   year = {2006},
   month = {1},
   abstract = {J2EE applications are becoming increasingly ubiquitous and with their increasing adoption, performance and scalability issues are gaining in importance. For a J2EE application to perform well and be scalable, both the platform on which it is built and the application design must be efficient and scalable. Industry-standard benchmarks such as the SPECjAppServer set of benchmarks help to evaluate the performance and scalability of alternative platforms for J2EE applications, however, they cannot be used to evaluate the performance and scalability of concrete applications built on the selected platforms. In this paper, we present a systematic approach for evaluating and predicting the performance and scalability of J2EE applications based on modeling and simulation. The approach helps to identify and eliminate bottlenecks in the application design and ensure that systems are designed and sized to meet their quality of service requirements. We introduce our approach by showing how it can be applied to the SPECjAppServer2004 benchmark which is used as a representative J2EE application. A detailed model of a SPECjAppServer2004 deployment is built in a step-by-step fashion and then used to predict the behavior of the system under load. The approach is validated by comparing model predictions against measurements on the real system.},
   pdf = {http://www.spec.org/workshops/2006/},
   booktitle = {Proceedings of the 2006 SPEC Benchmark Workshop, Austin, Texas, USA, January 23, 2006},
   author = {Kounev, Samuel},
   tags = {QPME}
}

@Book { Ko2005-TUD-PhD_Thesis,
   title = {Performance Engineering of Distributed Component-Based Systems - Benchmarking, Modeling and Performance Prediction},
   year = {2005},
   month = {12},
   pdf = {http://www.amazon.de/exec/obidos/ASIN/3832247130/302-7474121-6584807},
   publisher = {Shaker Verlag, Ph.D. Thesis, Technische Universit{\"a}t Darmstadt, Germany},
   ISBN = {3832247130},
   author = {Kounev, Samuel},
   tags = {QPME}
}

@Inproceedings { BeSh2004,
   title = {Performance Prediction and Physical Design of J2EE based Web applications},
   year = {2004},
   month = {7},
   booktitle = {WSEAS CSCC 2004, Athens, Greece},
   author = {Bellur, Umesh and Shirabate, Akhilesh},
   tags = {QPME}
}

@Inproceedings { KoBu2003-ISPASS-ModelingUsingQPNs,
   title = {Performance Modeling of Distributed E-Business Applications using Queueing Petri Nets},
   year = {2003},
   pages = {143--155},
   abstract = {In this paper we show how Queuing Petri Net (QPN) models can be exploited for performance analysis of distributed e-business systems. We study a real-world application, and demonstrate the benefits, in terms of modelling power and expressiveness, that QPN models provide over conventional modelling paradigms such as Queuing Networks and Petri Nets. As shown, QPNs facilitate the integration of both hardware and software aspects of system behavior in the same model. In addition to hardware contention and scheduling strategies, using QPNs one can easily model simultaneous resource possession, synchronization, blocking and contention for software resources. By validating the models presented through measurements, we show that they are not just powerful as a specification mechanism, but are also very powerful as a performance analysis and prediction tool. However, currently available tools and techniques for QPN analysis are limited. Improved solution methods, which enable larger models to be analyzed, need to be developed. By demonstrating the power of QPNs as a modelling paradigm in realistic scenarios, we hope to motivate further research in this area.},
   note = {Best-Paper-Award at ISPASS-2003},
   pdf = {http://www.ispass.org/ispass2003/},
   publisher = {IEEE Computer Society},
   address = {Washington, DC, USA},
   booktitle = {Proceedings of the 2003 IEEE International Symposium on Performance Analysis of Systems and Software (ISPASS 2003), Austin, Texas, USA, March 6-8, 2003},
   ISBN = {0-7803-7756-7},
   DOI = {10.1109/ISPASS.2003.1190241},
   author = {Kounev, Samuel and Buchmann, Alejandro},
   tags = {QPME}
}

@Book { BaKr2002-SPNs_Intro_to_the_Theory,
   title = {Stochastic Petri Nets - An Introduction to the Theory},
   year = {2002},
   publisher = {Vieweg Verlag},
   author = {Bause, Falko and Kritzinger, Pieter S.},
   tags = {QPME}
}

@Article { 933169,
   title = {Modeling, scheduling, and prediction in wafer fabrication systems using queueing Petri net and genetic algorithm},
   journal = {Proceedings of the 2001 IEEE International Conference on Robotics and Automation (ICRA 2001)},
   year = {2001},
   month = {7},
   volume = {4},
   pages = {3559-3564},
   ISBN = {0-7803-6576-3},
   ISSN = {1050-4729},
   DOI = {10.1109/ROBOT.2001.933169},
   author = {Wen, Hung-We and Fu, Li-Chen and Huang, Shih-Shinh},
   tags = {QPME}
}

@Article { BaBu1998-QPNs_with_PF_Solution,
   title = {Queueing Petri Nets with Product Form Solution},
   journal = {Performance Evaluation},
   year = {1998},
   volume = {32},
   number = {4},
   pages = {265--299},
   author = {Bause, Falko and Buchholz, Peter},
   tags = {QPME}
}

@Inproceedings { BaBuKe1997-Integrating_Software_and_Hardware_Perf_Models,
   title = {Integrating Software and Hardware Performance Models Using Hierarchical Queueing Petri Nets},
   year = {1997},
   booktitle = {Proceedings of the 9.\verb=~=ITG\verb=~=/\verb=~=GI\verb=~=- Fachtagung Messung, Modellierung und Bewertung von Rechen- und Kommunikationssystemen,\verb=~=(MMB'97), Freiberg, Germany, September 17-19},
   author = {Bause, Falko and Buchholz, Peter and Kemper, Peter},
   tags = {QPME}
}

@Inproceedings { BaBuKe1995-QPN_Tool_for_HQPN,
   title = {QPN-Tool for the Specification and Analysis of Hierarchically Combined Queueing Petri Nets},
   year = {1995},
   volume = {977},
   pages = {224--238},
   editor = {Beilner, H. and Bause, F.},
   publisher = {Springer},
   address = {Heidelberg, Germany},
   series = {Lecture Notes in Computer Science},
   booktitle = {Quantitative Evaluation of Computing and Communication Systems},
   author = {Bause, Falko and Buchholz, Peter and Kemper, Peter},
   tags = {QPME}
}

@Inproceedings { BaBuKe1994-HQPNs,
   title = {Hierarchically Combined Queueing Petri Nets},
   year = {1994},
   month = {6},
   number = {199},
   pages = {176--182},
   publisher = {Springer},
   address = {Heidelberg, Germany},
   series = {LNCI 199},
   booktitle = {Proceedings of the 11th International Conference on Analysis and Optimization of Systems, Discrete Event Systems, Sophie-Antipolis, France},
   author = {Bause, Falko and Buchholz, Peter and Kemper, Peter},
   tags = {QPME}
}

@Inproceedings { Ba1993-QPN_Formalism,
   title = {Queueing Petri Nets - A formalism for the combined qualitative and quantitative analysis of systems},
   year = {1993},
   pages = {14--23},
   publisher = {IEEE Computer Society},
   address = {Washington, DC, USA},
   booktitle = {Proceedings of the 5th International Workshop on Petri Nets and Performance Models, Toulouse, France, October 19-22},
   author = {Bause, Falko},
   tags = {QPME}
}

@Techreport { Ba1993-QPN+PN--QPN,
   title = {QN + PN = QPN - Combining Queueing Networks and Petri Nets},
   year = {1993},
   institution = {Department of CS, University of Dortmund, Germany},
   type = {Technical Report No.461},
   author = {Bause, Falko},
   tags = {QPME}
}

